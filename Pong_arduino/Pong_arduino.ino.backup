#define num 5
#define motorPin 6

const int redPin = 11;
const int greenPin = 10;
const int bluePin = 9;

float readings[2][num];
int readindex[2];
float total[2];
float avg[2];
int pressure, prev_pressure;

unsigned long int trigPin[2] = {8, 13};
unsigned long int echoPin[2] = {7, 12};

unsigned long timestamp;
unsigned long interval = 300;

unsigned long motorspeed = 100;
bool motorOn, next_motorOn;

void setup() {
  Serial.begin(9600);
  for(int i = 0; i<2; i++){
    pinMode(trigPin[i], OUTPUT);
    pinMode(echoPin[i], INPUT);
  }
  timestamp = millis();
}

void loop() {
  int i, angle;
  long duration[2];
  float distance[2];

  for(i=0;i<2;i++){
    digitalWrite(trigPin[i], LOW);  // Added this line
    delayMicroseconds(2); // Added this line
    digitalWrite(trigPin[i], HIGH);
    delayMicroseconds(10); // Added this line
    digitalWrite(trigPin[i], LOW);
    duration[i] = pulseIn(echoPin[i], HIGH, 100000);
    distance[i] = (duration[i]/2) / 29.1;
    total[i] -= readings[i][readindex[i]];
    readings[i][readindex[i]] = distance[i];
    total[i] += readings[i][readindex[i]];
    readindex[i] = readindex[i]+1;
    if(readindex[i] >= num)
      readindex[i] = 0;

    avg[i] = total[i]/num;
    int val = constrain(avg[i], 2, 30);
    val = map(avg[i], 2, 30, 0, 30);
    Serial.print(avg[i]);
    //Serial.print(distance[i]);
    Serial.print(" ");
  }
  pressure = analogRead(A0);

  if(pressure < 100 && prev_pressure >= 100){
    //released
    analogWrite(motorPin, 255);
    timestamp = millis();
    motorOn = true;
  }

  pressure = constrain(pressure, 0, 600);
  Serial.print(pressure);
  
  angle = map(pressure, 100, 500, 180, 360);
  angle = constrain(angle, 170, 360);
  setLedColorHSV(angle, 1, 1);

  
  interval = map(pressure, 100, 600, 300, 75);
  motorspeed = map(pressure, 100, 600, 100, 200);

  //Serial.println(motorspeed);
  if(millis()-timestamp >= interval){
    timestamp = millis();
    if(motorOn)
      analogWrite(motorPin, 0);
    else
      if(pressure >= 100)
        analogWrite(motorPin, motorspeed);
    motorOn = !motorOn;
  }

  prev_pressure = pressure;
  Serial.println("");
  delay(50);
}


void setLedColorHSV(int h, double s, double v) {
  double r=0; 
  double g=0;
  double b=0;
  h %= 360;
  double hf=h/60.0;

  int i=(int)floor(hf);
  double f = h/60.0 - i;
  double pv = v * (1 - s);
  double qv = v * (1 - s*f);
  double tv = v * (1 - s * (1 - f));

  switch (i){
  case 0: //rojo dominante
    r = v;
    g = tv;
    b = pv;
    break;
  case 1: //verde
    r = qv;
    g = v;
    b = pv;
    break;
  case 2: 
    r = pv;
    g = v;
    b = tv;
    break;
  case 3: //azul
    r = pv;
    g = qv;
    b = v;
    break;
  case 4:
    r = tv;
    g = pv;
    b = v;
    break;
  case 5: //rojo
    r = v;
    g = pv;
    b = qv;
    break;
  }

  //set each component to a integer value between 0 and 255
  int red=constrain((int)255*r,0,255);
  int green=constrain((int)255*g,0,255);
  int blue=constrain((int)255*b,0,255);
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);
}
